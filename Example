import time
import random

class CloudServer:
    def __init__(self, name):
        self.name = name

    def process_request(self, data):
        print(f"{self.name}: Processing request '{data}'")
        time.sleep(2)  # Simulate processing time
        return f"{self.name}: Response for '{data}'"

class CloudNetwork:
    def __init__(self, servers, latency_mean, packet_loss_probability):
        self.servers = servers
        self.latency_mean = latency_mean
        self.packet_loss_probability = packet_loss_probability

    def simulate_network_latency(self):
        # Simulate variable network latency
        latency = random.gauss(self.latency_mean, 1)
        if latency < 0.1:
            latency = 0.1  # Ensure a minimum latency
        time.sleep(latency)

    def simulate_packet_loss(self):
        # Simulate packet loss
        return random.random() > self.packet_loss_probability

    def route_request(self, data):
        print(f"Request: Sending data '{data}' to cloud network")

        # Simulate network latency
        self.simulate_network_latency()

        # Simulate packet loss
        if self.simulate_packet_loss():
            print("Request: Packet lost in the network")
            return "Request: Response lost in the network"

        # Simple load balancing: route request to the first available server
        if not self.servers:
            return "Request: No servers available"

        server = random.choice(self.servers)
        response = server.process_request(data)

        print(f"Request: Received response '{response}' from {server.name}")
        return response

if __name__ == "__main__":
    # Create cloud servers
    server1 = CloudServer("Server 1")
    server2 = CloudServer("Server 2")

    # Create cloud network with servers and introduce network challenges
    cloud_network = CloudNetwork([server1, server2], latency_mean=0.5, packet_loss_probability=0.1)

    # Simulate multiple requests
    for request_id in range(1, 6):
        request_data = f"Request {request_id}"

        # Route the request through the cloud network
        response = cloud_network.route_request(request_data)

        print(f"Main: Received final response '{response}'\n")
